CoalMerged <- left_join(CoalCat, NEIsub, by = "SCC") #warnings; slow execution time
CoalMerged <- na.omit(CoalMerged)
DF4 <- CoalMerged %>%
group_by(year) %>%
summarize(PM25 = sum(PM25))
ggplot(DF4, aes(year, PM25)) + geom_point(size = 4, alpha = 0.5) +
geom_smooth(method = "lm") + labs(title = "Average Coal Emissions", x="Year", y=expression("Average Coal Emissions "* PM[2.5])) +
scale_x_continuous(breaks=c(1999, 2002, 2005, 2008))
dev.copy(png, file = "plot4.png", width=500, height=400)
dev.off()
## 5 - How have emissions from motor vehicle sources changed from 1999-2008 in
## Baltimore City?
VehicleCat <- SCC %>%
select(SCC, Short.Name) %>%
filter(grepl('Motor|Vehicle', Short.Name )) %>%
select(SCC)
NEIsub <- NEI %>%
select(fips, year, SCC , Emissions) %>%
rename(PM25 = Emissions) %>%
filter(fips == "24510")
VehicleMerged <- left_join(VehicleCat, NEIsub, by = "SCC")
VehicleMerged <- na.omit(VehicleMerged)
ggplot(VehicleMerged, aes(year, PM25)) +
geom_point(size = 4, alpha = 0.5) +
geom_smooth(method = "lm") +
labs(title = "Motor Vehicle Emissions in Baltimore, MD",x="Year", y=expression("Vehicle Emissions "* PM[2.5])) +
scale_x_continuous(breaks=c(1999, 2002, 2005, 2008))
dev.copy(png, file = "plot5.png", width=500, height=300)
dev.off()
## 6 - Compare emissions from motor vehicle sources in Baltimore City with
## emissions from motor vehicle sources in Los Angeles County, California
## (fips == "06037"). Which city has seen greater changes over time in motor
#  vehicle emissions?
NEIbaltimore <- NEI %>%
select(fips, year, SCC , Emissions) %>%
filter(fips == "24510") %>%
rename(PM25 = Emissions)
NEIla <- NEI %>%
select(fips, year, SCC, Emissions) %>%
filter(fips == "06037") %>%
rename(PM25 = Emissions)
Baltimore <- left_join(VehicleCat, NEIbaltimore, by = "SCC")
Baltimore <- na.omit(Baltimore)
LA <- left_join(VehicleCat, NEIla, by = "SCC")
LA <- na.omit(LA)
BLA <- bind_rows(Baltimore, LA)
BLA <- mutate(BLA, City = ifelse(fips == 24510, "Baltimore", "Los Angeles"))
BLA2 <- BLA %>%
group_by(year,fips) %>%
rename(City = fips) %>%
summarize(avePM25 = sum(PM25))
ggplot(BLA, aes(factor(year), log(PM25))) +
geom_boxplot(aes(color = City)) +
labs(title = "Motor Vehicle Emission Comparison of Two Cities",x="Year", y=expression("Vehicle Emissions log("* PM[2.5]*")"))
dev.copy(png, file = "plot6.png", width=500, height=300)
dev.off()
head(PM25)
head(DF1)
head(NEI)
DF1 <- NEI %>%
select(year == 1999)
DF1 <- NEI %>%
sort(year == 1999)
DF1 <- NEI %>%
filter(year == 1999)
length(DF1)
DF1 <- NEI %>%
filter(year == 2002)
length(DF1)
length(DF1[,1])
DF1 <- NEI %>%
filter(year == 1999)
length(DF1[,1])
DF1 <- NEI %>%
select(year, type, Emissions) %>%
group_by(type, year) %>%
summarize(PM25 = mean(Emissions))  # because the number of meters changes from year-to-year, the average is a better represnetation.  It controlls for the increase owing to the placement of new meeters.
model <- lm(PM25 ~ year, DF1)
DF1 <- NEI %>%
select(year, type, Emissions) %>%
group_by(type, year) %>%
summarize(PM25 = mean(Emissions))  # because the number of meters changes from year-to-year, the average is a better represnetation.  It controlls for the increase owing to the placement of new meeters.
model <- lm(PM25 ~ year, DF1)
with(DF1, plot(year, PM25, main = "Total PM2.5 From All Sources", type = "n"))
with(subset(DF1, type == "NON-ROAD"), points(year, PM25), col = "black", pch = 15)
with(subset(DF1, type == "NONPOINT"), points(year, PM25, col = "blue", pch = 16))
with(subset(DF1, type == "ON-ROAD"), points(year, PM25, col = "red", pch = 17))
with(subset(DF1, type == "POINT"), points(year, PM25, col = "green",pch = 18))
abline(model, lwd=2)
legend(x = 2006, y = 55, pch = c(15,16,17,18), col = c("black", "blue", "red", "green"),
legend = c("NON-ROAD", "NONPOINT", "ON-ROAD", "POINT"), cex = .75, bty= "n")
dev.copy(png, file = "plot1.png", width=500, height=350)
dev.off()
DF2 <- NEI %>%
select(fips, year, Emissions) %>%
filter(fips == "24510") %>%
filter(year == 1999)
length(DF[,1])
length(DF2[,1])
DF2 <- NEI %>%
select(fips, year, Emissions) %>%
filter(fips == "24510") %>%
filter(year == 2002)
length(DF2[,1])
DF2 <- NEI %>%
select(fips, year, Emissions) %>%
filter(fips == "24510") %>%
group_by(year) %>%
summarize(PM25 = mean(Emissions))
model <- lm(PM25 ~ year, DF2)
with(DF2, plot(year, PM25, pch = 15, main = "Average PM25 From All Emission Types \nin Baltimore, MD"))
abline(model, lwd = 1, col = "red")
legend(x=2005, y=10, pch = 15,bty = "n", col = c("black", "red"),
legend = c("Mean PM25", "Regression Line"))
dev.copy(png, file = "plot2.png", width=600, height=450)
dev.off()
DF3 <- NEI %>%
select(fips, year, type, Emissions) %>%
filter(fips == "24510") %>%
group_by(type, year) %>%
summarize(PM25 = mean(Emissions))
qplot(year, PM25, facets = . ~ type, data=DF3, main = "PM25 by Source Type in Baltimore, MD", geom = c("point", "smooth"), method = "lm") +
scale_x_continuous(breaks=c(1999, 2002, 2005, 2008)) +
theme(panel.margin = unit(1, "lines"))
dev.copy(png, file = "plot3.png", width=700, height=300)
dev.off()
ggplot(DF4, aes(year, PM25)) + geom_point(size = 4, alpha = 0.5) +
geom_smooth(method = "lm") + labs(title = "Average Coal Emissions", x="Year", y=expression("Average Coal Emissions "* PM[2.5])) +
scale_x_continuous(breaks=c(1999, 2002, 2005, 2008))
ggplot(VehicleMerged, aes(year, PM25)) +
geom_point(size = 4, alpha = 0.5) +
geom_smooth(method = "lm") +
labs(title = "Motor Vehicle Emissions in Baltimore, MD",x="Year", y=expression("Vehicle Emissions "* PM[2.5])) +
scale_x_continuous(breaks=c(1999, 2002, 2005, 2008))
ggplot(BLA, aes(factor(year), log(PM25))) +
geom_boxplot(aes(color = City)) +
labs(title = "Motor Vehicle Emission Comparison of Two Cities",x="Year", y=expression("Vehicle Emissions log("* PM[2.5]*")"))
install.packages("knitr")
datasets(airquality)
data(airquality)
head(airquality)
data(airquality)
g <- qplot(airquality, aes(ozone, Solar.R)) + geom_line()
library(ggplot2)
g <- qplot(airquality, aes(ozone, Solar.R)) + geom_line()
g
g <- qplot(airquality, aes(ozone, Solar.R))
g
with(airquality(plot(Ozone, Solar.R)))
plot(Ozone, Solar.R)
plot(Ozone ~ Solar.R, airquality)
library(stats)
regres = lm(Ozone ~ Solar.R, airquality)
abline(regress)
abline(regres)
First R Markdown
===============
Hey let's load some data
```{r}
data(airquality)
head(airquality)
```
What about a plot
```{r}
g <- plot(Ozone ~ Solar.R, airquality)
g
```
add a regression
```{r}
library(stats)
regres = lm(Ozone ~ Solar.R, airquality)
g + abline(regres)
```
First R Markdown
===============
Hey let's load some data
```{r}
data(airquality)
head(airquality)
```
What about a plot
```{r}
g <- plot(Ozone ~ Solar.R, airquality)
```
add a regression
```{r}
library(stats)
regres = lm(Ozone ~ Solar.R, airquality)
abline(regres)
```
data(airquality)
data(airquality)
head(airquality)
g <- plot(Ozone ~ Solar.R, airquality)
library(stats)
regres = lm(Ozone ~ Solar.R, airquality)
abline(regres)
library(stats)
regres = lm(Ozone ~ Solar.R, airquality)
plot(Ozone ~ Solar.R, airquality)
abline(regres)
library(stats)
model <- lm(Ozone ~ Solar.R, airquality)
with(airquality, plot(Ozone, Solar.R, pch = 15, main = "Airquality correlation to Solar Radiance"))
abline(model, lwd = 1, col = "red")
legend(x=2005, y=10, pch = 15,bty = "n", col = c("black", "red"),
legend = c("Mean PM25", "Regression Line"))
legend(x=50, y=150, pch = 15,bty = "n", col = c("black", "red"),
legend = c("Mean PM25", "Regression Line"))
```{r}
library(stats)
model <- lm(Ozone ~ Solar.R, airquality)
with(airquality, plot(Solar.R, Ozone, pch = 15, main = "Airquality correlation to Solar Radiance"))
abline(model, lwd = 1, col = "red")
legend(x=50, y=150, pch = 15,bty = "n", col = "red"),
legend = "Regression Line")
legend(x=50, y=150, pch = 15,bty = "n", col = "red",
legend = "Regression Line")
legend(x=25, y=200, pch = 15,bty = "n", col = "red",
legend = "Regression Line")
legend(x=25, y=175, pch = 15,bty = "n", col = "red",
legend = "Regression Line")
?plot
?legend
library(stats)
model <- lm(Ozone ~ Solar.R, airquality)
with(airquality, plot(Solar.R, Ozone, pch = 15, main = "Airquality correlation to Solar Radiance"))
abline(model, lwd = 1, col = "red")
legend(x=25, y=175, pch = 15,bty = "o", col = "red",
legend = "Regression Line")
library(stats)
model <- lm(Ozone ~ Solar.R, airquality)
with(airquality, plot(Solar.R, Ozone, pch = 15, main = "Airquality correlation to Solar Radiance"))
abline(model, lwd = 1, col = "red")
legend(x=25, y=160, pch = 15,bty = "o", col = "red",
legend = "Regression Line")
mcar(2,1)
par(mfrow=c(2,1))
plot(Ozone ~ Solar.R, airquality)
plot(Ozone ~ Month, airquality)
par(mfrow=c(2,1))
plot(Ozone ~ Solar.R, airquality)
plot(Ozone ~ Month, airquality)
**Hey** *let's load some data*
Add a regression
?legend
setwd("C:/Users/jeffthatcher/Cloud Drive/RRepos/Reproducible_Research")
activityDataFull <- read.table("C:/Users/jeffthatcher/Cloud Drive/RRepos/repdata-data-activity/activity.csv", sep = ",", header = TRUE)
activityData <- na.omit(activityDataFull)
meanDailySteps <- as.data.frame(as.matrix(tapply(activityData$steps, activityData$date, sum)))
colnames(meanDailySteps) <- c("steps")
library(ggplot2)
ggplot(meanDailySteps, aes(x=steps)) + geom_histogram(binwidth = 1000)
meanSteps <- mean(na.omit(meanDailySteps$steps))
medianSteps <- median(na.omit(meanDailySteps$steps))
intervalSteps <- aggregate(activityData$steps, list(activityData$interval), mean)
colnames(intervalSteps) <- c("interval", "steps")
ggplot(intervalSteps, aes(interval, steps)) + geom_line()
mostSteps <- intervalSteps[which.max(intervalSteps$steps), ]
missingNAN<- is.na(activityDataFull$steps)
totalMissing <- sum(as.numeric(missingNAN))
for (i in 1:length(activityDataFull$steps)){
if (is.na(activityDataFull$steps[i] == TRUE)){
activityDataFull$steps[i] <- intervalSteps$steps[match(activityDataFull$interval[i], intervalSteps$interval)]
}
}
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
head(meanDailySteps)
meanDailyStepsFull2 <- aggregate(activityDataFull$steps, list(activityDataFull$date), sum)))
colnames(meanDailyStepsFull2) <- c("date", "steps_Modified")
meanDailyStepsFull2 <- aggregate(activityDataFull$steps, list(activityDataFull$date), sum)
colnames(meanDailyStepsFull2) <- c("date", "steps_Modified")
head(meanDailySteps)
head(meanDailyStepsFull2)
weekday(meanDailyStepsFull2)
weekdays(meanDailyStepsFull2$date)
?weekdays
weekdays(meanDailyStepsFull2$date, abbreviate=FALSE)
weekdays(as.vector(meanDailyStepsFull2$date), abbreviate=FALSE)
weekdays(as.matrix(meanDailyStepsFull2$date), abbreviate=FALSE)
weekdays(as.numeric(meanDailyStepsFull2$date), abbreviate=FALSE)
weekdays(as.date(meanDailyStepsFull2$date), abbreviate=FALSE)
weekdays(as.Date(meanDailyStepsFull2$date), abbreviate=FALSE)
meanDailyStepsFull2$day <- weekdays(as.Date(meanDailyStepsFull2$date), abbreviate=FALSE)
head(meanDailyStepsFull2)
meanDailyStepsFull2 <- aggregate(activityDataFull$steps, list(activityDataFull$date), sum)
colnames(meanDailyStepsFull2) <- c("date", "steps_Modified")
meanDailyStepsFull2$day <- weekdays(as.Date(meanDailyStepsFull2$date), abbreviate=FALSE)
if (meanDailyStepsFull2$day == "Monday" | "Tuedsay" | "Wednesday"){
meandDailyStepsFull2$day <- "Weekday"
} else {
meanDailyStepsFull2$day <- "Weekend"
}
if (meanDailyStepsFull2$day == c("Monday" | "Tuedsay" | "Wednesday")){
meandDailyStepsFull2$day <- "Weekday"
} else {
meanDailyStepsFull2$day <- "Weekend"
}
if (meanDailyStepsFull2$day == c("Monday" || "Tuedsay" || "Wednesday")){
meandDailyStepsFull2$day <- "Weekday"
} else {
meanDailyStepsFull2$day <- "Weekend"
}
if (meanDailyStepsFull2$day == "Saturday" || "Sunday"){
meandDailyStepsFull2$day <- "Weekend"
} else {
meanDailyStepsFull2$day <- "Weekday"
}
for (i in 1:length(meanDailyStepsFull2$day)){
if (meanDailyStepsFull2$day[i] == "Saturday" || "Sunday"){
meandDailyStepsFull2$day[i] <- "Weekend"
} else {
meanDailyStepsFull2$day[i] <- "Weekday"
}
}
for (i in 1:length(meanDailyStepsFull2$day)){
if (meanDailyStepsFull2$day[i] == 'Saturday' || 'Sunday'){
meandDailyStepsFull2$day[i] <- "Weekend"
} else {
meanDailyStepsFull2$day[i] <- "Weekday"
}
}
meanDailyStepsFull2$day[1]
meanDailyStepsFull2$day[1] == 'Saturday' || 'Sunday'
meanDailyStepsFull2$day[1] == "Saturday"
meanDailyStepsFull2$day[1] == "Saturday" | "Sunday"
meanDailyStepsFull2$day[1] == "Saturday" || "Sunday"
meanDailyStepsFull2$day[1] == c("Saturday" | "Sunday")
meanDailyStepsFull2$day[1] == c("Saturday", "Sunday")
meanDailyStepsFull2$day[1] == c("Saturday" | "Sunday")
meanDailyStepsFull2$day[1] == "Saturday" || meanDailyStepsFull2$day[1] == "Sunday"
meanDailyStepsFull2$day[1] == "Saturday" || meanDailyStepsFull2$day[1] == "Monday"
for (i in 1:length(meanDailyStepsFull2$day)){
if (meanDailyStepsFull2$day[i] == "Saturday" || meanDailyStepsFull2$day[i] == "Sunday"){
meandDailyStepsFull2$day[i] <- "Weekend"
} else {
meanDailyStepsFull2$day[i] <- "Weekday"
}
}
for (i in 1:length(meanDailyStepsFull2$day)){
if (meanDailyStepsFull2$day[i] == "Saturday" || meanDailyStepsFull2$day[i] == "Sunday"){
meanDailyStepsFull2$day[i] <- "Weekend"
} else {
meanDailyStepsFull2$day[i] <- "Weekday"
}
}
head(meanDailyStepsFull2)
activityDataFull
head(activityDataFull)
activityDataFull2 <- aggregate(activityDataFull$steps, list(activityDataFull$date), sum)
head(activityDataFull2)
activityDataFull2 <- aggregate(activityDataFull$steps, list(activityDataFull$interval), sum)
head(activityDataFull2)
?merge
activityDataFull$day <- weekdays(as.Date(activityDataFull$date), abbreviate=FALSE)
for (i in 1:length(activityDataFull$day)){
if (meanDailyStepsFull2$day[i] == "Saturday" || meanDailyStepsFull$day[i] == "Sunday"){
meanDailyStepsFull$day[i] <- "Weekend"
} else {
meanDailyStepsFull2$day[i] <- "Weekday"
}
}
activityDataFull$day <- weekdays(as.Date(activityDataFull$date), abbreviate=FALSE)
for (i in 1:length(activityDataFull$day)){
if (activityDataFull$day[i] == "Saturday" || activityDataFull$day[i] == "Sunday"){
activityDataFull$day[i] <- "Weekend"
} else {
activityDataFull$day[i] <- "Weekday"
}
}
head(activityDataFull)
?select
?subset
activityDataWeekend <- subset(activityDataFull, day == Weekend)
activityDataWeekend <- subset(activityDataFull, day == "Weekend")
activityDataWeekday <- subset(activityDataFull, day == "Weekday")
activityIntervalStepsWeekend <- aggregate(activityDataWeekend$steps, list(activityDataWeekend$date, mean))
activityIntervalStepsWeekday <- aggregate(activityDataWeekday$steps, list(activityDataWeekday$date, mean))
activityIntervalStepsWeekend <- aggregate(activityDataWeekend$steps, list(activityDataWeekend$date, mean))
activityIntervalStepsWeekend <- aggregate(activityDataWeekend$steps, list(activityDataWeekend$date), mean)
activityIntervalStepsWeekday <- aggregate(activityDataWeekday$steps, list(activityDataWeekday$date), mean)
activityIntervalStepsWeekend <- aggregate(activityDataWeekend$steps, list(activityDataWeekend$interval), mean)
#colnames(activityDataFull2) <- c("date", "steps_Modified")
activityIntervalStepsWeekday <- aggregate(activityDataWeekday$steps, list(activityDataWeekday$interval), mean)
head(activityIntervalStepsWeekend)
activityIntervalStepsWeekend <- aggregate(activityDataWeekend$steps, list(activityDataWeekend$interval), mean)
colnames(activityDataFull2) <- c("interval", "Weekend_Steps")
activityIntervalStepsWeekday <- aggregate(activityDataWeekday$steps, list(activityDataWeekday$interval), mean)
colnames(activityDataFull2) <- c("interval", "Weekday_Steps")
head(activityIntervalStepsWeekend)
activityIntervalStepsWeekend <- aggregate(activityDataWeekend$steps, list(activityDataWeekend$interval), mean)
colnames(activityIntervalStepsWeekend) <- c("interval", "Weekend_Steps")
activityIntervalStepsWeekday <- aggregate(activityDataWeekday$steps, list(activityDataWeekday$interval), mean)
colnames(activityIntervalStepsWeekday) <- c("interval", "Weekday_Steps")
DF2 <- merge(activityIntervalStepsWeekday, activityIntervalStepsWeekend, interval)
head(activityIntervalStepsWeekend)
?merge
DF2 <- merge(activityIntervalStepsWeekday, activityIntervalStepsWeekend)
head(DF2)
DF2 <- melt(DF2)
head(DF2)
?melt
DF2 <- merge(activityIntervalStepsWeekday, activityIntervalStepsWeekend)
DF3 <- melt(DF2, id = c("interval"))
head(DF3_)
head(DF3)
DF3 <- melt(DF2, id = "interval")
ggplot(DF2, aes(x=interval, y = value)) + geom_line() + facet_grid(.~ variable)
ggplot(DF2, aes(interval ~ value)) + geom_line() + facet_grid(.~ variable)
ggplot(DF2, aes(interval ~ value)) + geom_line() + facet_grid(variable)
ggplot(DF2, aes(interval ~ value)) + geom_line() + facet_grid("variable")
ggplot(DF2, aes(interval,  value)) + geom_line() + facet_grid(.~variable)
ggplot(DF2, aes(x = interval , y = value)) + geom_line()
head(DF2)
DF2 <- merge(activityIntervalStepsWeekday, activityIntervalStepsWeekend)
DF2 <- melt(DF2, id = "interval")
ggplot(DF2, aes(x = interval , y = value)) + geom_line()
ggplot(DF2, aes(interval,  value)) + geom_line() + facet_grid(.~variable)
head(DF2)
colnames(DF2) <- c("interval", "variable", "average steps")
colnames(DF2) <- c("interval", "variable", "average_steps")
ggplot(DF2, aes(interval,  average_steps)) + geom_line() + facet_grid(.~variable)
colnames(DF2) <- c("interval", "variable", "average_steps")
ggplot(DF2, aes(interval,  average_steps)) + geom_line() + facet_grid(variable ~ .)
ggplot(meanDailySteps, aes(x=steps)) + geom_histogram(binwidth = 1000, fill = "cornsilk", colour = "grey60", size=0.2) + geom_density()
ggplot(meanDailySteps, aes(x=steps)) + geom_histogram(binwidth = 2000, fill = "cornsilk", colour = "grey60", size=0.2) + geom_density()
ggplot(meanDailySteps, aes(x=steps)) + geom_histogram(binwidth = 1000, fill = "cornsilk", colour = "grey60", size=0.2)
?geom_density()
ggplot(meanDailySteps, aes(x=steps)) + geom_histogram(binwidth = 1000, fill = "cornsilk", colour = "grey60", size=0.2) + geom_density(na.rm=TRUE)
head(meanDailySteps, 50)
ggplot(meanDailySteps, aes(x=steps)) + geom_histogram(binwidth = 1000, fill = "cornsilk", colour = "grey60", size=0.2) + geom_density()
library(ggplot2)
ggplot(meanDailySteps, aes(x=steps)) + geom_histogram(binwidth = 1000, fill = "sky blue", colour = "grey60", size=0.2)
ggplot(DF, aes(x=value)) + geom_histogram(binwidth = 1000, fill = c("cornsilk", "sky blue"), colour = "grey60", size=0.2) + facet_grid(.~ variable)
ggplot(DF, aes(x=value)) + geom_histogram(binwidth = 1000, fill = "orange", colour = "grey60", size=0.2) + facet_grid(.~ variable)
head(DF)
colnames(DF) <- c("Interval", "value")
ggplot(DF, aes(x=value)) + geom_histogram(binwidth = 1000, fill = "orange", colour = "grey60", size=0.2) + facet_grid(.~ Interval)
colnames(DF) <- c("variable", "Average_Steps_Per_Day")
ggplot(DF, aes(x=Average_Steps_Per_Day)) + geom_histogram(binwidth = 1000, fill = "orange", colour = "grey60", size=0.2) + facet_grid(.~ variable)
colnames(meanDailyStepsFull) <- c("steps_Modified")
ggplot(meanDailyStepsFull, aes(x=steps_Modified)) + geom_histogram(binwidth = 1000, fill = "sky blue", colour = "grey60", size=0.2)
colnames(meanDailyStepsFull) <- c("Average_Steps_Per_Day_Modified")
ggplot(meanDailyStepsFull, aes(x=Average_Steps_Per_Day_Modified)) + geom_histogram(binwidth = 1000, fill = "sky blue", colour = "grey60", size=0.2)
colnames(meanDailySteps) <- c("Total_Steps_Per_Day")
library(ggplot2)
ggplot(meanDailySteps, aes(x=Total_Steps_Per_Day)) + geom_histogram(binwidth = 1000, fill = "sky blue", colour = "grey60", size=0.2)
colnames(intervalSteps) <- c("interval", "Average_Steps")
ggplot(intervalSteps, aes(interval, Average_Steps)) + geom_line()
colnames(intervalSteps) <- c("interval", "Average_Steps")
ggplot(intervalSteps, aes(interval, Average_Steps) + geom_line()
colnames(intervalSteps) <- c("interval", "Average_Steps")
ggplot(intervalSteps, aes(interval, Average_Steps) + geom_line()
head(activityDataFull)
setwd("C:/Users/jeffthatcher/Cloud Drive/RRepos/Reproducible_Research")
activityDataFull <- read.table("C:/Users/jeffthatcher/Cloud Drive/RRepos/repdata-data-activity/activity.csv", sep = ",", header = TRUE)
activityData <- na.omit(activityDataFull)
meanDailySteps <- as.data.frame(as.matrix(tapply(activityData$steps, activityData$date, sum)))
colnames(meanDailySteps) <- c("Total_Steps_Per_Day")
library(ggplot2)
ggplot(meanDailySteps, aes(x=Total_Steps_Per_Day)) + geom_histogram(binwidth = 1000, fill = "sky blue", colour = "grey60", size=0.2)
meanSteps <- mean(na.omit(meanDailySteps$steps))
medianSteps <- median(na.omit(meanDailySteps$steps))
intervalSteps <- aggregate(activityData$steps, list(activityData$interval), mean)
colnames(intervalSteps) <- c("interval", "Average_Steps")
ggplot(intervalSteps, aes(interval, Average_Steps)) + geom_line()
mostSteps <- intervalSteps[which.max(intervalSteps$steps), ]
missingNAN<- is.na(activityDataFull$steps)
totalMissing <- sum(as.numeric(missingNAN))
for (i in 1:length(activityDataFull$steps)){
if (is.na(activityDataFull$steps[i] == TRUE)){
activityDataFull$steps[i] <- intervalSteps$steps[match(activityDataFull$interval[i], intervalSteps$interval)]
}
}
head(intervalSteps)
for (i in 1:length(activityDataFull$steps)){
if (is.na(activityDataFull$steps[i] == TRUE)){
activityDataFull$steps[i] <- intervalSteps$Average_Steps[match(activityDataFull$interval[i], intervalSteps$interval)]
}
}
meanDailyStepsFull <- as.data.frame(as.matrix(tapply(activityDataFull$steps, activityDataFull$date, sum)))
colnames(meanDailyStepsFull) <- c("Total_Steps_Per_Day_Modified")
ggplot(meanDailyStepsFull, aes(x=Total_Steps_Per_Day_Modified)) + geom_histogram(binwidth = 1000, fill = "sky blue", colour = "grey60", size=0.2)
meanStepsFull <- mean(meanDailyStepsFull$steps_Modified)
medianStepsFull <- median(meanDailyStepsFull$steps_Modified)
DF <- merge(meanDailySteps, meanDailyStepsFull)
library(reshape2)
DF <- melt(DF)
colnames(DF) <- c("variable", "Total_Steps_Per_Day")
ggplot(DF, aes(x=Total_Steps_Per_Day)) + geom_histogram(binwidth = 1000, fill = "orange", colour = "grey60", size=0.2) + facet_grid(.~ variable)
#add the day-of-week column
activityDataFull$day <- weekdays(as.Date(activityDataFull$date), abbreviate=FALSE)
#convert day-of-week column vales to Weekday or Weekend
for (i in 1:length(activityDataFull$day)){
if (activityDataFull$day[i] == "Saturday" || activityDataFull$day[i] == "Sunday"){
activityDataFull$day[i] <- "Weekend"
} else {
activityDataFull$day[i] <- "Weekday"
}
}
# calculate the average interval steps for weekend and weekdays separetely and then combine.
activityDataWeekend <- subset(activityDataFull, day == "Weekend")
activityDataWeekday <- subset(activityDataFull, day == "Weekday")
activityIntervalStepsWeekend <- aggregate(activityDataWeekend$steps, list(activityDataWeekend$interval), mean)
colnames(activityIntervalStepsWeekend) <- c("interval", "Weekend_Steps")
activityIntervalStepsWeekday <- aggregate(activityDataWeekday$steps, list(activityDataWeekday$interval), mean)
colnames(activityIntervalStepsWeekday) <- c("interval", "Weekday_Steps")
DF2 <- merge(activityIntervalStepsWeekday, activityIntervalStepsWeekend)
DF2 <- melt(DF2, id = "interval")
# plot
colnames(DF2) <- c("interval", "variable", "Average_Steps")
ggplot(DF2, aes(interval,  Average_Steps)) + geom_line() + facet_grid(variable ~ .)
